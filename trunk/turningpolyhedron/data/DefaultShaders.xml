<?xml version="1.0" encoding="utf-8" ?>
<!-- TEST ONLY -->
<shaders>
    <!-- Template templateName="test-only" -->
    <!--
    <shader shaderProgram="standard"
      baseColor="textureArgument0:texcoord0:MipFilter=LINEAR;MinFilter=LINEAR;MagFilter=LINEAR;AddressU=CLAMP;AddressV=CLAMP;"
      ambient="0.5,0.5,0.5" diffuse="1,1,1"
      specular="1,1,0.8" specularHardness="50"
      normalMap="textureArgument1:texcoord0:MipFilter=NONE;MinFilter=LINEAR;MagFilter=LINEAR;AddressU=CLAMP;AddressV=CLAMP;"
      parallaxMap="textureArgument1.w:texcoord0"
      parallaxMapOffset="-0.5" parallaxMapScale="0.02"
    />
    <shader shaderProgram="standard"
      baseColor="textureArgument0:texcoord0:textureFile:tex1.png:MipFilter=NONE;MinFilter=LINEAR;MagFilter=LINEAR;AddressU=CLAMP;AddressV=CLAMP;"
      ambient="0.5,0.5,0.5" diffuse="0.5,0.5,0.5"
      specular="0.4,0.4,0.3" specularHardness="20"
      normalMap="textureArgument1.zyx:texcoord0:textureFile:normal1.png:MipFilter=NONE;MinFilter=LINEAR;MagFilter=LINEAR;AddressU=CLAMP;AddressV=CLAMP;"
      parallaxMap="textureArgument0.y:texcoord0"
      parallaxMapOffset="-0.5" parallaxMapScale="0.02"
    />
    -->
    <shaderTemplate templateName="simple1" shaderProgram="standard" ambient="0.25,0.25,0.25" diffuse="0.5,0.5,0.5"
    baseColor="textureArgument0:texcoord0:textureFile:test3.png:MipFilter=LINEAR;MinFilter=LINEAR;MagFilter=LINEAR;AddressU=wrap;AddressV=wrap;"
      normalMap="textureArgument1:texcoord0:textureFile:test3a.png:MipFilter=NONE;MinFilter=LINEAR;MagFilter=LINEAR;AddressU=CLAMP;AddressV=CLAMP;"
      parallaxMap="textureArgument2:texcoord0:textureFile:test3h.png:MipFilter=NONE;MinFilter=LINEAR;MagFilter=LINEAR;AddressU=CLAMP;AddressV=CLAMP;"
      parallaxMapOffset="-0.5" parallaxMapScale="0.05"
    specular="1,1,1"
    specularHardness="50" emissive="shaderArgument" effectStates="fillmode=solid;"/>
    <shaderTemplate templateName="simple1_fixed" shaderProgram="standard" ambient="shaderArgument" diffuse="shaderArgument"
              specular="shaderArgument" specularHardness="shaderArgument" emissive="shaderArgument"/>
</shaders>
