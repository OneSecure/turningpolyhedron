msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"

#.    DrawTextB bmG_Lv.hdc, objText.GetText("Random Level"), Label1(10).Font, 0, 0, 640, 480, DT_CENTER Or DT_VCENTER Or DT_SINGLELINE, vbWhite, , True
#.    DrawTextB bmG_Back.hdc, objText.GetText("Random Level") + txtGame(4).Tag, Me.Font, 8, 8, 480, 16, DT_VCENTER Or DT_SINGLELINE, vbBlack, , True
#. GameMenuCaption(5) = objText.GetText("Random level")
msgid "Random Level"
msgstr ""

#.    DrawTextB bmG_Lv.hdc, Replace(objText.GetText("Level %d"), "%d", CStr(GameLev)), Label1(10).Font, 0, 0, 640, 480, DT_CENTER Or DT_VCENTER Or DT_SINGLELINE, vbWhite, , True
#.    DrawTextB bmG_Back.hdc, Replace(objText.GetText("Level %d"), "%d", CStr(GameLev)) + Me.Tag, Me.Font, 8, 8, 480, 16, DT_VCENTER Or DT_SINGLELINE, vbBlack, , True
msgid "Level %d"
msgstr ""

#.     MsgBox objText.GetText("Unknown error!")
#.     MsgBox objText.GetText("Unknown error!")
msgid "Unknown error!"
msgstr ""

#.      Case "u", ChrW(8593), LCase(objText.GetText("U"))
#.        Case 1:      s = objText.GetText("U") '"↑"
#.       s = Replace(GameDemoS, "u", objText.GetText("U")) '"↑"
#.    s = Replace(s, "u", objText.GetText("U")) '"↑"
msgid "U"
msgstr ""

#.      Case "d", ChrW(8595), LCase(objText.GetText("D"))
#.        Case 2:      s = objText.GetText("D") '"↓"
#.       s = Replace(s, "d", objText.GetText("D")) '"↓"
#.    s = Replace(s, "d", objText.GetText("D")) '"↓"
msgid "D"
msgstr ""

#.      Case "l", ChrW(8592), LCase(objText.GetText("L"))
#.        Case 3:      s = objText.GetText("L") '"←"
#.       s = Replace(s, "l", objText.GetText("L")) '"←"
#.    s = Replace(s, "l", objText.GetText("L")) '"←"
msgid "L"
msgstr ""

#.      Case "r", ChrW(8594), LCase(objText.GetText("R"))
#.        Case 4:      s = objText.GetText("R") '"→"
#.       s = Replace(s, "r", objText.GetText("R")) '"→"
#.    s = Replace(s, "r", objText.GetText("R")) '"→"
msgid "R"
msgstr ""

#.      Case " ", "s", ChrW(9671), ChrW(9633), "_", LCase(objText.GetText("S"))
#.       sSolution = sSolution + objText.GetText("S") '"◇"
#.       s = Replace(s, "s", objText.GetText("S")) '"◇"
#.    s = Replace(s, "s", objText.GetText("S")) '"◇"
msgid "S"
msgstr ""

#.       MsgBox objText.GetText("Map error!")
#.         MsgBox objText.GetText("Map error!")
msgid "Map error!"
msgstr ""

#.     s = InputBox(Replace(objText.GetText("Level: (Max=%d)"), "%d", CStr(LevCount)), , GameLev)
msgid "Level: (Max=%d)"
msgstr ""

#.     If cd.VBGetOpenFileName(s, , , , , True, objText.GetText("Turning Square level pack|*.box"), , CStr(App.Path), , , Me.hwnd) Then
#.  If cd.VBGetOpenFileName(s, , , , , True, objText.GetText("Turning Square level pack|*.box"), , CStr(App.Path), , , Me.hwnd) Then
#.  If cd.VBGetSaveFileName(s, , , objText.GetText("Turning Square level pack|*.box"), , CStr(App.Path), , "box", Me.hwnd) Then
msgid "Turning Square level pack|*.box"
msgstr ""

#.       txtGame(0).Text = s + vbCrLf + objText.GetText("Moves:") + CStr(Lev(GameLev).SolveItGetDistance(m))
#.    s = s + vbCrLf + objText.GetText("Moves:") + CStr(y)
msgid "Moves:"
msgstr ""

#.       MsgBox objText.GetText("No solution!"), vbExclamation
msgid "No solution!"
msgstr ""

#.      MsgBox objText.GetText("Error!"), vbCritical
msgid "Error!"
msgstr ""

#. DrawTextB bmG.hdc, objText.GetText("Demo"), Me.Font, r.Left + 8, r.Bottom - 24, 64, 16, DT_CENTER Or DT_VCENTER Or DT_SINGLELINE, vbWhite, , True
msgid "Demo"
msgstr ""

#. DrawTextB bmG.hdc, objText.GetText("Cancel"), Me.Font, r.Right - 72, r.Bottom - 24, 64, 16, DT_CENTER Or DT_VCENTER Or DT_SINGLELINE, vbWhite, , True
#. DrawTextB bmG.hdc, objText.GetText("Cancel"), Me.Font, r.Left + 200, r.Bottom - 24, 48, 16, DT_CENTER Or DT_VCENTER Or DT_SINGLELINE, vbWhite, , True
msgid "Cancel"
msgstr ""

#. DrawTextB bmG.hdc, objText.GetText("Generate"), Me.Font, r.Left + 144, r.Bottom - 24, 48, 16, DT_CENTER Or DT_VCENTER Or DT_SINGLELINE, vbWhite, , True
msgid "Generate"
msgstr ""

#. DrawTextB bmG.hdc, objText.GetText("Random map mode:"), Me.Font, r.Left + 8, r.Top + 8, 128, 16, DT_VCENTER Or DT_SINGLELINE, vbWhite, , True
msgid "Random map mode:"
msgstr ""

#. DrawTextB bmG.hdc, objText.GetText("Seed:"), Me.Font, r.Left + 144, r.Top + 8, 128, 16, DT_VCENTER Or DT_SINGLELINE, vbWhite, , True
#.    DrawTextB bmG_Back.hdc, objText.GetText("Seed:") + txtGame(0).Tag, Me.Font, 256, 8, 480, 16, DT_VCENTER Or DT_SINGLELINE, vbBlack, , True
msgid "Seed:"
msgstr ""

#.  s = Space(8) + .GetText("Turning Square is a clone and enhancement to popular game Bloxorz. The aim of the game is to get the block to fall into the square hole at the end of each level. There are 33 levels in default level pack, and many levels in other level pack. You can make your own levels using level editor, or explore completely new levels using random level generator.")
msgid "Turning Square is a clone and enhancement to popular game Bloxorz. The aim of the game is to get the block to fall into the square hole at the end of each level. There are 33 levels in default level pack, and many levels in other level pack. You can make your own levels using level editor, or explore completely new levels using random level generator."
msgstr ""

#.  s = s + vbLf + Space(8) + .GetText("To move the block around the world, use the UP DOWN LEFT and RIGHT arrow keys. Be careful not to fall off the edges - the level will be restarted.")
msgid "To move the block around the world, use the UP DOWN LEFT and RIGHT arrow keys. Be careful not to fall off the edges - the level will be restarted."
msgstr ""

#.  s = s + vbLf + Space(8) + .GetText("Bridges and switches are located in many levels. The switches are activated when they are pressed down by the block. You don't need to stay resting on the switch to keep bridges open. There are two types of switches: 'Heavy' X-shaped ones and 'Soft' round ones. Soft switches are activated when any part of your block presses it. Hard switches require much more pressure, so your block must be standing on its end to activate it. When activated, each switch may behave differently. Some will toggle the bridge state each time it is used. Some will only ever make certain bridges open, and activating it again will not make it close. Green or red colored squares will flash to indicate which bridges are being operated.")
msgid "Bridges and switches are located in many levels. The switches are activated when they are pressed down by the block. You don't need to stay resting on the switch to keep bridges open. There are two types of switches: 'Heavy' X-shaped ones and 'Soft' round ones. Soft switches are activated when any part of your block presses it. Hard switches require much more pressure, so your block must be standing on its end to activate it. When activated, each switch may behave differently. Some will toggle the bridge state each time it is used. Some will only ever make certain bridges open, and activating it again will not make it close. Green or red colored squares will flash to indicate which bridges are being operated."
msgstr ""

#.  s = s + vbLf + Space(8) + .GetText("Orange tiles are more fragile than the rest of the land. If your block stands up vertically on an orange tile, the tile will give way and your block will fall.")
msgid "Orange tiles are more fragile than the rest of the land. If your block stands up vertically on an orange tile, the tile will give way and your block will fall."
msgstr ""

#.  s = s + vbLf + Space(8) + .GetText("The tile shaped like two brackets will teleports your block to different locations, splitting it into two smaller blocks at the same time. These can be controlled individually by pressing the SPACE BAR and will rejoin into a normal block when both are placed next to each other. Small blocks can still operate soft switches, but they're too small to activate heavy switches. Also small blocks can't go through the exit hole - only a complete block can finish the level.")
msgid "The tile shaped like two brackets will teleports your block to different locations, splitting it into two smaller blocks at the same time. These can be controlled individually by pressing the SPACE BAR and will rejoin into a normal block when both are placed next to each other. Small blocks can still operate soft switches, but they're too small to activate heavy switches. Also small blocks can't go through the exit hole - only a complete block can finish the level."
msgstr ""

#.  s = s + vbLf + Space(8) + .GetText("There are some new tiles in Turning Square: pyramid, ice and wall. Your block is unstable when standing on the pyramid, so it will lie down immediately unless there is a wall next to your block. When the block is completely on the ice, it will slip until get off the ice or hit the wall. As an obstacle, your block can't pass through the wall, but it can recline on the wall and move around.")
msgid "There are some new tiles in Turning Square: pyramid, ice and wall. Your block is unstable when standing on the pyramid, so it will lie down immediately unless there is a wall next to your block. When the block is completely on the ice, it will slip until get off the ice or hit the wall. As an obstacle, your block can't pass through the wall, but it can recline on the wall and move around."
msgstr ""

#.  s = s + .GetText("(ANIMATION IS BROKEN)")
msgid "(ANIMATION IS BROKEN)"
msgstr ""

#.  s = objText.GetText("VB6 version, author: ") + "acme_pjz"
msgid "VB6 version, author: "
msgstr ""

#.  s = objText.GetText("Source code:")
msgid "Source code:"
msgstr ""

#.  s = objText.GetText("Original version:")
msgid "Original version:"
msgstr ""

#.  .DrawTextXP bmG_Back.hdc, objText.GetText("OK"), 568, 456, 64, 16, DT_CENTER Or DT_VCENTER Or DT_SINGLELINE, vbWhite, , True
msgid "OK"
msgstr ""

#.    DrawTextB bmG_Back.hdc, objText.GetText("Copy"), Me.Font, 400, 8, 48, 16, DT_VCENTER Or DT_SINGLELINE, vbBlack, , True
msgid "Copy"
msgstr ""

#.   DrawTextB bmG_Back.hdc, objText.GetText("Moves"), Me.Font, 8, 24, 72, 16, DT_VCENTER Or DT_SINGLELINE, vbBlack, , True
msgid "Moves"
msgstr ""

#.   DrawTextB bmG_Back.hdc, objText.GetText("Time used"), Me.Font, 8, 40, 72, 16, DT_VCENTER Or DT_SINGLELINE, vbBlack, , True
msgid "Time used"
msgstr ""

#.   DrawTextB bmG_Back.hdc, objText.GetText("Retries"), Me.Font, 8, 56, 72, 16, DT_VCENTER Or DT_SINGLELINE, vbBlack, , True
msgid "Retries"
msgstr ""

#.   DrawTextB bmG_Back.hdc, objText.GetText("Menu"), Me.Font, 600, 8, 32, 16, DT_CENTER Or DT_VCENTER Or DT_SINGLELINE, vbBlack, , True
msgid "Menu"
msgstr ""

#. GameMenuCaption(1) = objText.GetText("Return to game")
msgid "Return to game"
msgstr ""

#. GameMenuCaption(2) = objText.GetText("Restart")
msgid "Restart"
msgstr ""

#. GameMenuCaption(3) = objText.GetText("Pick a level")
msgid "Pick a level"
msgstr ""

#. GameMenuCaption(4) = objText.GetText("Open level file")
msgid "Open level file"
msgstr ""

#.    DrawTextB bmG_Lv.hdc, objText.GetText("Random Level"), Label1(10).Font, 0, 0, 640, 480, DT_CENTER Or DT_VCENTER Or DT_SINGLELINE, vbWhite, , True
#.    DrawTextB bmG_Back.hdc, objText.GetText("Random Level") + txtGame(4).Tag, Me.Font, 8, 8, 480, 16, DT_VCENTER Or DT_SINGLELINE, vbBlack, , True
#. GameMenuCaption(5) = objText.GetText("Random level")
msgid "Random level"
msgstr ""

#. GameMenuCaption(6) = objText.GetText("Input solution")
msgid "Input solution"
msgstr ""

#. GameMenuCaption(7) = objText.GetText("Auto solver")
msgid "Auto solver"
msgstr ""

#. GameMenuCaption(8) = objText.GetText("Game instructions")
#. cmd0(2).Caption = objText.GetText("Game instructions")
msgid "Game instructions"
msgstr ""

#. GameMenuCaption(9) = objText.GetText("Main menu")
msgid "Main menu"
msgstr ""

#. GameMenuCaption(10) = objText.GetText("Exit game")
msgid "Exit game"
msgstr ""

#.  Me.Tag = Replace(objText.GetText(" of %d ("), "%d", CStr(LevCount)) + Mid(fn, InStrRev(fn, "\") + 1) + ")"
msgid " of %d ("
msgstr ""

#.  MsgBox objText.GetText("Wrong level!"), vbCritical
msgid "Wrong level!"
msgstr ""

#.  Me.Caption = objText.GetText("Turning Square")
#.    Me.Caption = objText.GetText("Turning Square") + " - " + s
#.    Me.Caption = objText.GetText("Turning Square") + " - " + s
#.  Me.Caption = objText.GetText("Turning Square")
#. Me.Caption = objText.GetText("Turning Square")
msgid "Turning Square"
msgstr ""

#.    MsgBox objText.GetText("Error")
#.    MsgBox objText.GetText("Error")
msgid "Error"
msgstr ""

#.   If MsgBox(objText.GetText("Are you sure?"), vbExclamation + vbYesNo) = vbYes Then
msgid "Are you sure?"
msgstr ""

#.    s = InputBox(objText.GetText("Input map size:"), , CStr(.Width) + " x " + CStr(.Height))
msgid "Input map size:"
msgstr ""

#.     s = objText.GetText("Time=") + CStr(i) + objText.GetText("ms, Nodes=") + CStr(j) + "/" + CStr(.SolveItGetNodeMax)
msgid "Time="
msgstr ""

#.     s = objText.GetText("Time=") + CStr(i) + objText.GetText("ms, Nodes=") + CStr(j) + "/" + CStr(.SolveItGetNodeMax)
msgid "ms, Nodes="
msgstr ""

#.     If i > 0 Then s = s + vbCr + CStr(Round(j / i * 1000)) + objText.GetText("Nodes/s")
msgid "Nodes/s"
msgstr ""

#.     MsgBox objText.GetText("Error!!!"), vbCritical
msgid "Error!!!"
msgstr ""

#.     txtGame(3).Text = objText.GetText("No solution.")
msgid "No solution."
msgstr ""

#.   cmdEdit(16).Caption = objText.GetText("&Abort")
msgid "&Abort"
msgstr ""

#.   cmdEdit(16).Caption = objText.GetText("&Generate")
#. cmdEdit(16).Caption = objText.GetText("&Generate")
msgid "&Generate"
msgstr ""

#.    MsgBox objText.GetText("Aborted!")
msgid "Aborted!"
msgstr ""

#.     MsgBox objText.GetText("Failed to generate!")
msgid "Failed to generate!"
msgstr ""

#.    b = MsgBox(Replace(objText.GetText("Moves=%d. Apply?"), "%d", CStr(i)), vbYesNo Or vbQuestion) = vbYes
msgid "Moves=%d. Apply?"
msgstr ""

#.  .AddItem objText.GetText("Close")
msgid "Close"
msgstr ""

#.  .AddItem objText.GetText("Open")
msgid "Open"
msgstr ""

#.  .AddItem objText.GetText("Toggle")
msgid "Toggle"
msgstr ""

#.  .AddItem objText.GetText("Beginner")
msgid "Beginner"
msgstr ""

#.  .AddItem objText.GetText("Intermediate")
msgid "Intermediate"
msgstr ""

#.  .AddItem objText.GetText("Advanced")
msgid "Advanced"
msgstr ""

#.  .AddItem objText.GetText("Zigzag")
msgid "Zigzag"
msgstr ""

#.  .AddItem objText.GetText("Ice mode")
msgid "Ice mode"
msgstr ""

#.  .AddItem objText.GetText("Fragile mode")
msgid "Fragile mode"
msgstr ""

#.  .AddItem objText.GetText("Zigzag with button")
msgid "Zigzag with button"
msgstr ""

#. cmdEdit(17).Caption = objText.GetText("&Close")
#. cmdEdit(13).Caption = objText.GetText("&Close")
msgid "&Close"
msgstr ""

#. chk1(0).Caption = objText.GetText("Use current level as template")
msgid "Use current level as template"
msgstr ""

#. chk1(1).Caption = objText.GetText("Sort random levels by moves")
msgid "Sort random levels by moves"
msgstr ""

#. Frame1(2).Caption = objText.GetText("Random map")
msgid "Random map"
msgstr ""

#. Label1(16).Caption = objText.GetText("Mode")
msgid "Mode"
msgstr ""

#. Label1(17).Caption = objText.GetText("Seed")
msgid "Seed"
msgstr ""

#. Label1(18).Caption = objText.GetText("Iterations")
msgid "Iterations"
msgstr ""

#. Label1(21).Caption = objText.GetText("Level count")
msgid "Level count"
msgstr ""

#. cmd0(1).Caption = objText.GetText("Editor/Solver")
msgid "Editor/Solver"
msgstr ""

#. cmd0(0).Caption = objText.GetText("Start game")
msgid "Start game"
msgstr ""

#. cmdEdit(14).Caption = objText.GetText("&Solution")
msgid "&Solution"
msgstr ""

#. optSt(3).Caption = objText.GetText("Single")
msgid "Single"
msgstr ""

#. optSt(2).Caption = objText.GetText("Vertical")
msgid "Vertical"
msgstr ""

#. optSt(1).Caption = objText.GetText("Horizontal")
msgid "Horizontal"
msgstr ""

#. optSt(0).Caption = objText.GetText("Up")
msgid "Up"
msgstr ""

#. cmdEdit(18).Caption = objText.GetText("Random Map(Beta)")
msgid "Random Map(Beta)"
msgstr ""

#. chkPos(3).Caption = objText.GetText("Set")
#. chkPos(2).Caption = objText.GetText("Set")
#. chkPos(1).Caption = objText.GetText("Set")
#. chkPos(0).Caption = objText.GetText("Set")
msgid "Set"
msgstr ""

#. cmdEdit(15).Caption = objText.GetText("&Clear")
msgid "&Clear"
msgstr ""

#. cmdEdit(12).Caption = objText.GetText("Solve...")
msgid "Solve..."
msgstr ""

#. cmdEdit(11).Caption = objText.GetText("Clear")
msgid "Clear"
msgstr ""

#. optMode(1).Caption = objText.GetText("Select")
msgid "Select"
msgstr ""

#. optMode(0).Caption = objText.GetText("Edit")
msgid "Edit"
msgstr ""

#. Label1(2).Caption = objText.GetText("Pos2")
#.     DrawTextB bmEdit.hdc, objText.GetText("Pos2"), Me.Font, x * 24 - 48, y * 24 - 24, 72, 24, DT_CENTER Or DT_VCENTER Or DT_SINGLELINE, vbRed, , True
msgid "Pos2"
msgstr ""

#. Label1(1).Caption = objText.GetText("Pos1")
#.     DrawTextB bmEdit.hdc, objText.GetText("Pos1"), Me.Font, i * 24 - 48, j * 24 - 24, 72, 24, DT_CENTER Or DT_VCENTER Or DT_SINGLELINE, vbRed, , True
msgid "Pos1"
msgstr ""

#. Label1(0).Caption = objText.GetText("Button number")
msgid "Button number"
msgstr ""

#. Frame1(0).Caption = objText.GetText("Properties")
msgid "Properties"
msgstr ""

#. Label1(5).Caption = objText.GetText("No properties.")
msgid "No properties."
msgstr ""

#. cmdEdit(6).Caption = objText.GetText("&Resize")
msgid "&Resize"
msgstr ""

#. cmdEdit(5).Caption = objText.GetText("&Delete")
msgid "&Delete"
msgstr ""

#. cmdEdit(4).Caption = objText.GetText("&Add")
msgid "&Add"
msgstr ""

#. cmdEdit(3).Caption = objText.GetText("&Quit")
msgid "&Quit"
msgstr ""

#. cmdEdit(2).Caption = objText.GetText("&Save")
msgid "&Save"
msgstr ""

#. cmdEdit(1).Caption = objText.GetText("&Open")
msgid "&Open"
msgstr ""

#. cmdEdit(0).Caption = objText.GetText("&New")
msgid "&New"
msgstr ""

#. Frame1(1).Caption = objText.GetText("Buttons")
msgid "Buttons"
msgstr ""

#. Label1(9).Caption = objText.GetText("Behavior")
msgid "Behavior"
msgstr ""

#. Label1(7).Caption = objText.GetText("Pos")
msgid "Pos"
msgstr ""

#. Label1(6).Caption = objText.GetText("No.")
msgid "No."
msgstr ""

#. Label1(12).Caption = objText.GetText("Start pos")
msgid "Start pos"
msgstr ""

#. Label1(11).Caption = objText.GetText("Solving...")
#. Label1(10).Caption = objText.GetText("Solving...")
msgid "Solving..."
msgstr ""

#. mnuLv(0).Caption = objText.GetText("&Copy Level") + vbTab + "Ctrl+C"
msgid "&Copy Level"
msgstr ""

#. mnuLv(1).Caption = objText.GetText("&Paste Level") + vbTab + "Ctrl+V"
msgid "&Paste Level"
msgstr ""

#. mnuLv(3).Caption = objText.GetText("Rotate 90 C&W")
msgid "Rotate 90 C&W"
msgstr ""

#. mnuLv(4).Caption = objText.GetText("Rotate 90 &CCW")
msgid "Rotate 90 &CCW"
msgstr ""

#. mnuLv(5).Caption = objText.GetText("&Rotate 180")
msgid "&Rotate 180"
msgstr ""

#. mnuLv(7).Caption = objText.GetText("Flip &Horizontally")
msgid "Flip &Horizontally"
msgstr ""

#. mnuLv(8).Caption = objText.GetText("Flip &Vertically")
msgid "Flip &Vertically"
msgstr ""

#. DrawTextB bmG.hdc, objText.GetText("Generating..."), Label1(10).Font, r.Left, r.Top, w, h, DT_CENTER Or DT_VCENTER Or DT_SINGLELINE, vbWhite, , True
msgid "Generating..."
msgstr ""

#. cmbSwitch.AddItem objText.GetText("(None)")
msgid "(None)"
msgstr ""

#.   DrawTextB bmEdit.hdc, objText.GetText("Start"), Me.Font, i * 24 - 48, j * 24 - 24, 72, 24, DT_CENTER Or DT_VCENTER Or DT_SINGLELINE, vbRed, , True
msgid "Start"
msgstr ""

